   // Base Group gives the swallow part and base class programs
   // don't use it as a style always derive it and provide the
   // manndatory description and programms 
   // Minimum implementation by Inherited group
   // 1. parts and description "swallow.view.this" and "swallow.view.other"
   //    "default" , "appear_from" , "disappear_to" , "onscreen"
   // 2. programs 
   //    "appear_effect_this_view"  "appear_effect_other_view"
   //    "disappear_effect_this_view"  "disappear_effect_other_view" 


#define APPEAR_EFFECT_TIME .3
#define DISAPPEAR_EFFECT_TIME .3

#define APPEAR_EFFECT_TIME_STEP_1 .1
#define APPEAR_EFFECT_TIME_STEP_2 .2
#define DISAPPEAR_EFFECT_TIME_STEP_1 .1
#define DISAPPEAR_EFFECT_TIME_STEP_2 .2

#define APPEAR_EFFECT 1
#define DISAPPEAR_EFFECT 2

collections {
   group { name: "layout/viewmgr/baselayout";
      parts {
         part { name: "swallow.back";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
            }
         }
         part { name: "swallow.front";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
            }
         }
      }
   }
   group { name: "layout/viewmgr/noanimation";
      script {
         public effectType = 0;      
      }
      parts {
         part { name: "swallow.view.other";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
            }
         }
         part { name: "dimmer";
            type: RECT;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "dim" 0.0;
               color: 0 0 0 50;
            }
            description { state: "show" 0.0;
               visible: 1;
            }
         }
         part { name: "swallow.view.this";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
            }
         }
      }
      programs {
      // Programs that need to be overriden in derived groups
         program { name : "appear_effect_this_view";
            script {
               run_program(PROGRAM:"effect_finish");
            }
         }
         program { name : "disappear_effect_this_view";
            script {
               run_program(PROGRAM:"effect_finish");
            }
         }
         program { name : "appear_effect_other_view"; }
         program { name : "disappear_effect_other_view"; }
         program { name : "effect_finish";
            script {
               if(get_int(effectType) == APPEAR_EFFECT) { // for appear effect

                  // reset the state 
                  set_state(PART:"swallow.view.this", "onscreen", 0.0);
                  set_state(PART:"swallow.view.other", "disappear_to", 0.0); 

                  // emit a signal for appear effect finish
                  emit("appear,effect,finished",""); 
               } 
               if (get_int(effectType) == DISAPPEAR_EFFECT) { // for disappear effect

                  // setup after disappear effect
                  set_state(PART:"swallow.view.this", "disappear_to", 0.0);
                  set_state(PART:"swallow.view.other", "onscreen", 0.0); 

                  // emit a signal for dissapear effect finish
                  emit("disappear,effect,finished",""); 
               } 
               set_int(effectType,0);         
            }
         }
         program { name : "appear_effect";
            signal: "appear,effect";
            source: "elm";
            script {
               set_int(effectType,APPEAR_EFFECT);
               // setup before  appear effect
               set_state(PART:"swallow.view.this", "appear_from", 0.0);
               set_state(PART:"swallow.view.other", "onscreen", 0.0);

               // run appear effect
               run_program(PROGRAM:"appear_effect_this_view");
               run_program(PROGRAM:"appear_effect_other_view");
            }
         }
         program { name : "disappear_effect";
            signal: "disappear,effect";
            source: "elm";
            script {
               set_int(effectType,DISAPPEAR_EFFECT);
               // setup before disappear effect
               set_state(PART:"swallow.view.this", "onscreen", 0.0);
               set_state(PART:"swallow.view.other", "appear_from", 0.0);

               // run disappear effect
               run_program(PROGRAM:"disappear_effect_this_view");
               run_program(PROGRAM:"disappear_effect_other_view");
            }
         }
      }
   }

   // view manager fullscreen zoom
   group { name: "layout/viewmgr/default";
      inherit: "layout/viewmgr/noanimation";
      parts {
         part { name: "opacity";
            type: RECT;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 0.0 0.0;
               color: 255 255 255 255;
            }
            description { state: "onscreen" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
               color:  255 255 255 255;
            }
            description { state: "appear_from" 0.0;
               rel1.relative: 0.1 0.1; rel2.relative: 0.9 0.9;
               color: 255 255 255 0;
            }
            description { state: "disappear_to" 0.0;
               inherit: "appear_from" 0.0;
            }
         }
         part { name: "swallow.view.this";
            type: SWALLOW;
            clip_to: opacity;
            description { state: "default" 0.0;
               rel1 { relative: 0.0 0.0; to: "opacity"; }
               rel2 { relative: 1.0 1.0; to: "opacity"; }
            }
         }
         part { name: "swallow.view.other";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 0.0 0.0;
            }
            description { state: "onscreen" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
            }
            description { state: "appear_from" 0.0;
               inherit: "onscreen" 0.0;
            }
            description { state: "disappear_to" 0.0;
               inherit: "onscreen" 0.0;
            }
         }
      }
      programs {
         program { name : "appear_effect";
            signal: "appear,effect";
            source: "elm";
            script {
               set_int(effectType,APPEAR_EFFECT);
               // setup before  appear effect
               set_state(PART:"opacity", "appear_from", 0.0);
               set_state(PART:"swallow.view.other", "onscreen", 0.0);

               // run appear effect
               run_program(PROGRAM:"appear_effect_this_view");
            }
         }
         program { name : "disappear_effect";
            signal: "disappear,effect";
            source: "elm";
            script {
               set_int(effectType,DISAPPEAR_EFFECT);
               // setup before disappear effect
               set_state(PART:"swallow.view.this", "onscreen", 0.0);
               set_state(PART:"opacity", "onscreen", 0.0);
               set_state(PART:"swallow.view.other", "appear_from", 0.0);

               // run disappear effect
               run_program(PROGRAM:"disappear_effect_this_view");
            }
         }
         program { name : "effect_finish";
            script {
               if(get_int(effectType) == APPEAR_EFFECT) { // for appear effect
                  // emit a signal for appear effect finish
                  emit("appear,effect,finished",""); 
               } 
               if (get_int(effectType) == DISAPPEAR_EFFECT) { // for disappear effect
                  // emit a signal for dissapear effect finish
                  emit("disappear,effect,finished",""); 
               } 
               set_int(effectType,0);         
            }
         }
         program { name : "appear_effect_this_view";
            action: STATE_SET "onscreen" 0.0;
            target: "opacity";
            transition: DECELERATE APPEAR_EFFECT_TIME;
            after: "effect_finish";
         }
         program { name : "disappear_effect_this_view";
            action: STATE_SET "disappear_to" 0.0;
            target: "opacity";
            transition: DECELERATE DISAPPEAR_EFFECT_TIME;
            after: "effect_finish";
         }
      }
   }

   // view manager fullscreen slide in
   group { name: "layout/viewmgr/slidein";
      inherit: "layout/viewmgr/noanimation";
      parts {
         part { name: "swallow.view.this";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 0.0 0.0;
            }
            description { state: "onscreen" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
            }
            description { state: "appear_from" 0.0;
               rel1.relative: 1 0; rel2.relative: 2 1;
            }
            description { state: "disappear_to" 0.0;
               inherit: "appear_from" 0.0;
            }
         }
         part { name: "swallow.view.other";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 0.0 0.0;
            }
            description { state: "onscreen" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
            }
            description { state: "appear_from" 0.0;
               rel1.relative: -1 0; rel2.relative: 0 1;
            }
            description { state: "disappear_to" 0.0;
               inherit: "appear_from" 0.0;
            }
         }
      }
      programs {
         program { name : "appear_effect_this_view";
            action: STATE_SET "onscreen" 0.0;
            target: "swallow.view.this";
            transition: DECELERATE APPEAR_EFFECT_TIME;
         }
         program { name : "appear_effect_other_view";
            action: STATE_SET "disappear_to" 0.0;
            target: "swallow.view.other";
            transition: DECELERATE DISAPPEAR_EFFECT_TIME;
            after: "effect_finish";
         }
         program { name : "disappear_effect_other_view";
            action: STATE_SET "onscreen" 0.0;
            target: "swallow.view.other";
            transition: DECELERATE APPEAR_EFFECT_TIME;
         }
         program { name : "disappear_effect_this_view";
            action: STATE_SET "disappear_to" 0.0;
            target: "swallow.view.this";
            transition: DECELERATE DISAPPEAR_EFFECT_TIME;
            after: "effect_finish";
         }
      }
   }

   // view manager fullscreen slide in
   group { name: "layout/viewmgr/popup";
   inherit: "layout/viewmgr/noanimation";
      parts {
         part { name: "swallow.view.this";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 0.0 0.0;
            }
            description { state: "onscreen" 0.0;
               rel1.relative: 0.2 0.2; rel2.relative: 0.8 0.8;
            }
            description { state: "appear_from" 0.0;
               rel1.relative: 0.2 1; rel2.relative: 0.8 1.8;
            }
            description { state: "disappear_to" 0.0;
               inherit: "appear_from" 0.0;
            }
         }
         part { name: "swallow.view.other";
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 0.0 0.0;
            }
            description { state: "onscreen" 0.0;
               rel1.relative: 0.0 0.0; rel2.relative: 1.0 1.0;
            }
            description { state: "appear_from" 0.0;
               inherit: "onscreen" 0.0;
            }
            description { state: "disappear_to" 0.0;
               inherit: "onscreen" 0.0;
            }
         }
      }
      programs {
         program { name : "appear_effect_this_view";
            action: STATE_SET "onscreen" 0.0;
            target: "swallow.view.this";
            transition: DECELERATE APPEAR_EFFECT_TIME;
            after: "effect_finish";
         }
         program { name : "disappear_effect_this_view";
            action: STATE_SET "disappear_to" 0.0;
            target: "swallow.view.this";
            transition: DECELERATE DISAPPEAR_EFFECT_TIME;
            after: "effect_finish";
         }
      }
   }
}
